A51 MACRO ASSEMBLER  EVS1_VER2                                                            09/11/2023 20:32:55 PAGE     1


MACRO ASSEMBLER A51 V8.02b
OBJECT MODULE PLACED IN Evs1_ver2.OBJ
ASSEMBLER INVOKED BY: C:\Keil_v5\C51\BIN\A51.EXE Evs1_ver2.a51 SET(SMALL) DEBUG EP

LOC  OBJ            LINE     SOURCE

                       1     ;F(X3,X2,X1,X0) == 1 <=> 1,4,6,8,9,11,14
0000                   2     ORG 0000h;
  0011                 3     BASEADDRESS EQU 0011h;11h
  0004                 4     RELATIVEADDRESS EQU 0004h;04h
0000 020003            5     LJMP MAIN
                       6     ;ORG 5000
0003                   7     MAIN:
                       8     ;MOV P0, #0FFh
  00C0                 9     P4 EQU 0C0h
0003 75A000           10     MOV P2, #0000h
0006 751104           11     MOV 11h, #04h;LOAD TO 11H VALUE 04H
0009 750400           12     MOV 04h, #00h; LOAD TO 04H HIGH BITS OF EXTERNAL ADDRESS
000C 750580           13     MOV 05H, #80h;LOAD TO 04H LOW BITS OF EXTERNAL ADDRESS
000F A804             14     MOV R0, 04h
0011 8505A0           15     MOV P2, 05h
                      16     
0014 7452             17     MOV A,  #01010010b
0016 F2               18     MOVX  @R0, A    ;0-7 truth table in ex memory
0017 E8               19     MOV A, R0
0018 2401             20     ADD A, #1h
001A F8               21     MOV R0, A
001B 744B             22     MOV A,  #01001011b
001D F2               23     MOVX @R0, A;8-15 truth table in ex memory
001E C2C0             24     CLR P4.0;
0020 D2C1             25     SETB P4.1;
0022                  26     MET1:
0022 907FFB           27     MOV DPTR,#7FFBh ;address isReady flag
0025                  28     isReady:                ;check flag isReady
0025 E0               29     MOVX A,@DPTR    ;read flag
0026 5401             30     ANL A,#01h              ;select 0 bit
0028 60FB             31     JZ isReady
002A 907FFA           32     MOV DPTR,#7FFAh ;addres of (x3,x2,x1,x0) tuple
002D E0               33     MOVX A,@DPTR    ;write tuple to A
002E F520             34     MOV 20h, A              ;write x3,x2,x1,x0 to 20h
                      35     ; F(x3,x2,x1,x0) = ^x0 & x2 & x1 v ^x3 & ^x0 & x2 v ^x2 & ^x1 & x0 v x3 & ^x2 & (x0 v ^x1)
                      36     ;X3 - 3, X2 - 2, X1 - 1, X0 - 0
                      37     
0030 A2E0             38     MOV C, ACC.0 ;C = X0
0032 B3               39     CPL C;C = ^X0
0033 82E2             40     ANL C, ACC.2; C = ^X0 & X2
0035 82E1             41     ANL C, ACC.1; C = ^X0 & X2 & X1
0037 9204             42     MOV 20h.4, C; 03 = ^X0 & X2 & X1 -- 1
                      43     
0039 A2E3             44     MOV C, ACC.3;C = X3
003B 72E0             45     ORL C, ACC.0; C = X3 V X0
003D B3               46     CPL C; C = ^X3 & ^X0
003E 82E2             47     ANL C, ACC.2; C = ^X3 & ^X0 & X2
0040 7204             48     ORL C, 20h.4; C = ^x0 & x2 & x1 v ^x3 & ^x0 & x2
0042 9204             49     MOV 20h.4, C; 03 = ^x0 & x2 & x1 v ^x3 & ^x0 & x2 -- 2
                      50     
0044 A2E2             51     MOV C, ACC.2;C = X2
0046 72E1             52     ORL C, ACC.1; C = X2 V X1
0048 B3               53     CPL C; C = ^X2 & ^X1
0049 82E0             54     ANL C, ACC.0; C = ^X2 & ^X1 & X0
004B 7204             55     ORL C, 20h.4; C = ^x0 & x2 & x1 v ^x3 & ^x0 & x2 v ^x2 & ^x1 & x0
004D 9204             56     MOV 20h.4, C; 03 = ^x0 & x2 & x1 v ^x3 & ^x0 & x2 v ^x2 & ^x1 & x0 -- 4
                      57     
004F A2E1             58     MOV C, ACC.1; C = X1
A51 MACRO ASSEMBLER  EVS1_VER2                                                            09/11/2023 20:32:55 PAGE     2

0051 B3               59     CPL C; C = ^X1
0052 72E0             60     ORL C, ACC.0; C = X0 V ^X1
0054 B3               61     CPL C; C = ^X0 & X1
0055 72E2             62     ORL C, ACC.2; C = X2 V (^X0 & X1)
0057 B3               63     CPL C; C = ^X2 & (X0 V ^X1)
0058 82E3             64     ANL C, ACC.3; C = X3 & ^X2 & (X0 V ^X1)
005A 7204             65     ORL C, 20h.4; C = ^x0 & x2 & x1 v ^x3 & ^x0 & x2 v ^x2 & ^x1 & x0 v x3 & ^x2 & (x0 v ^x1)
005C 92C0             66     MOV     P4.0,C  ;res:=F
                      67     ; LOADING IDEALS
005E 7811             68     MOV R0, #BASEADDRESS
0060 20E315           69     JB ACC.3, SECOND        ;esli nabor >7
0063 E6               70     MOV A, @R0; A = RELATIVE ADDRESS
0064 F8               71     MOV R0, A
0065 E6               72     MOV A, @R0;LOW BITS OF EXTERNAL ADDRESS
0066 FA               73     MOV R2, A ; SAVE LOW BITS
0067 E8               74     MOV A, R0 ; WRITE TO ACC FOR INCREMENTING DATA ADDRESS
0068 2401             75     ADD A, #1; INCREMENT
006A F9               76     MOV R1, A; WRITE DATA ADDRESS TO R1 FOR HIGH BITS 
006B 87A0             77     MOV P2, @R1; HIGH BITS OF EXTERNAL ADDRESS
006D EA               78     MOV A, R2
006E F8               79     MOV R0, A
006F E2               80     MOVX A, @R0; A = IDEALS
0070 8520F0           81     MOV B, 20h
0073 53F007           82     ANL B, #00000111b
0076 018D             83     AJMP NEXT;
0078                  84     SECOND:
0078 E6               85     MOV A, @R0; A = RELATIVE ADDRESS
0079 F8               86     MOV R0, A
007A E6               87     MOV A, @R0 ;LOW BITS OF EXTERNAL ADDRESS
007B 2401             88     ADD A, #1
007D FA               89     MOV R2, A ; SAVE LOW BITS
007E E8               90     MOV A, R0 ; WRITE TO ACC FOR INCREMENTING DATA ADDRESS
007F 2401             91     ADD A, #1; INCREMENT
0081 F9               92     MOV R1, A; WRITE DATA ADDRESS TO R1 FOR HIGH BITS 
0082 87A0             93     MOV P2, @R1; HIGH BITS OF EXTERNAL ADDRESS
0084 EA               94     MOV A, R2
0085 F8               95     MOV R0, A
0086 E2               96     MOVX A, @R0; A = IDEALS
0087 8520F0           97     MOV B, 20h
008A 53F00F           98     ANL B, #00001111b
008D                  99     NEXT:
008D C5F0            100     XCH A, B                ; A = COUNTER
008F 6006            101     JZ END_OF_CYCLE ; if count = 0
0091 C5F0            102     XCH A, B                ; A = half of truth table, B = count
0093                 103     cycle:
0093 03              104     RR A;
0094 D5F0FC          105     DJNZ B, cycle;
0097                 106     END_OF_CYCLE:
0097 F5F0            107     MOV B, A;
0099 A2F0            108     MOV C, B.0              ;bit FROM TABLE
009B B3              109     CPL C                   ; INVERT C
009C 92C1            110     MOV P4.1, C             ; P4.1 = INVERTED BIT FROM TABLE
009E 907FFB          111     MOV DPTR,#7FFBh
00A1 E500            112     MOV A, 00h
00A3 0122            113     AJMP MET1;
                     114     END
A51 MACRO ASSEMBLER  EVS1_VER2                                                            09/11/2023 20:32:55 PAGE     3

SYMBOL TABLE LISTING
------ ----- -------


N A M E             T Y P E  V A L U E   ATTRIBUTES

ACC. . . . . . . .  D ADDR   00E0H   A   
B. . . . . . . . .  D ADDR   00F0H   A   
BASEADDRESS. . . .  N NUMB   0011H   A   
CYCLE. . . . . . .  C ADDR   0093H   A   
END_OF_CYCLE . . .  C ADDR   0097H   A   
ISREADY. . . . . .  C ADDR   0025H   A   
MAIN . . . . . . .  C ADDR   0003H   A   
MET1 . . . . . . .  C ADDR   0022H   A   
NEXT . . . . . . .  C ADDR   008DH   A   
P2 . . . . . . . .  D ADDR   00A0H   A   
P4 . . . . . . . .  N NUMB   00C0H   A   
RELATIVEADDRESS. .  N NUMB   0004H   A   
SECOND . . . . . .  C ADDR   0078H   A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
