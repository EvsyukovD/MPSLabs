A51 MACRO ASSEMBLER  EVS2                                                                 09/26/2023 15:44:47 PAGE     1


MACRO ASSEMBLER A51 V8.02b
OBJECT MODULE PLACED IN Evs2.OBJ
ASSEMBLER INVOKED BY: C:\Keil_v5\C51\BIN\A51.EXE Evs2.a51 SET(SMALL) DEBUG EP

LOC  OBJ            LINE     SOURCE

                       1     ;F(X3,X2,X1,X0) == 1 <=> 1,4,6,8,9,11,14
0000                   2     ORG 0000h;
  0011                 3     BASEADDRESS EQU 0011h;11h
  0004                 4     RELATIVEADDRESS EQU 0004h;04h
                       5             
                       6     ; init values for timer in every case: 1...5 sec wait
0000 754005            7     MOV 40H, #5 ;0;  make "table" for number of seconds for each tuple (x3,x2,x1,x0)
0003 754102            8     MOV 41H, #2 ;1
0006 754201            9     MOV 42H, #1 ;2
0009 754301           10     MOV 43H, #1 ;3
000C 754401           11     MOV 44H, #1 ;4
000F 754503           12     MOV 45H, #3 ;5
0012 754603           13     MOV 46H, #3 ;6
0015 754701           14     MOV 47H, #1 ;7
0018 754805           15     MOV 48H, #5;8
001B 754904           16     MOV 49H, #4;9
001E 754A01           17     MOV 4AH, #1;10
0021 754B02           18     MOV 4BH, #2;11
0024 754C01           19     MOV 4CH, #1;12
0027 754D01           20     MOV 4DH, #1;13
002A 754E01           21     MOV 4EH, #1;14
002D 754F01           22     MOV 4FH, #1;15
  00C0                23     P4 EQU 0C0h
0030 908000           24     MOV DPTR, #8000h
0033 7404             25     MOV A,#04h ;0004h - relative address OFFSET
0035 F0               26     MOVX @DPTR, A 
0036 908004           27     MOV DPTR,#8004h
0039 7411             28     MOV A, #11h; 0011h - base address OFFSET
003B F0               29     MOVX @DPTR, A
003C 7452             30     MOV A,  #01010010b
003E 908011           31     MOV DPTR, #8011h
0041 F0               32     MOVX  @DPTR, A          ;0-7 truth table in ex memory
                      33     ;MOV DPTR, #8001h
0042 744B             34     MOV A,  #01001011b
0044 908012           35     MOV DPTR, #8012h
0047 F0               36     MOVX @DPTR, A ;8-15 truth table in ex memory
0048 C2C0             37     CLR P4.0;
004A D2C1             38     SETB P4.1;
004C                  39     MET1:
004C 907FFB           40     MOV DPTR,#7FFBh ;address isReady flag
004F                  41     isReady:                ;check flag isReady
004F E0               42     MOVX A,@DPTR    ;read flag
0050 5401             43     ANL A,#01h              ;select 0 bit
0052 60FB             44     JZ isReady
0054 907FFA           45     MOV DPTR,#7FFAh ;addres of (x3,x2,x1,x0) tuple
0057 E0               46     MOVX A,@DPTR    ;write tuple to A
0058 F520             47     MOV 20h, A              ;write x3,x2,x1,x0 to 20h
                      48     ; F(x3,x2,x1,x0) = ^x0 & x2 & x1 v ^x3 & ^x0 & x2 v ^x2 & ^x1 & x0 v x3 & ^x2 & (x0 v ^x1)
                      49     ;X3 - 3, X2 - 2, X1 - 1, X0 - 0
                      50     
005A A2E0             51     MOV C, ACC.0 ;C = X0
005C B3               52     CPL C;C = ^X0
005D 82E2             53     ANL C, ACC.2; C = ^X0 & X2
005F 82E1             54     ANL C, ACC.1; C = ^X0 & X2 & X1
0061 9204             55     MOV 20h.4, C; 03 = ^X0 & X2 & X1 -- 1
                      56     
0063 A2E3             57     MOV C, ACC.3;C = X3
0065 72E0             58     ORL C, ACC.0; C = X3 V X0
A51 MACRO ASSEMBLER  EVS2                                                                 09/26/2023 15:44:47 PAGE     2

0067 B3               59     CPL C; C = ^X3 & ^X0
0068 82E2             60     ANL C, ACC.2; C = ^X3 & ^X0 & X2
006A 7204             61     ORL C, 20h.4; C = ^x0 & x2 & x1 v ^x3 & ^x0 & x2
006C 9204             62     MOV 20h.4, C; 03 = ^x0 & x2 & x1 v ^x3 & ^x0 & x2 -- 2
                      63     
006E A2E2             64     MOV C, ACC.2;C = X2
0070 72E1             65     ORL C, ACC.1; C = X2 V X1
0072 B3               66     CPL C; C = ^X2 & ^X1
0073 82E0             67     ANL C, ACC.0; C = ^X2 & ^X1 & X0
0075 7204             68     ORL C, 20h.4; C = ^x0 & x2 & x1 v ^x3 & ^x0 & x2 v ^x2 & ^x1 & x0
0077 9204             69     MOV 20h.4, C; 03 = ^x0 & x2 & x1 v ^x3 & ^x0 & x2 v ^x2 & ^x1 & x0 -- 4
                      70     
0079 A2E1             71     MOV C, ACC.1; C = X1
007B B3               72     CPL C; C = ^X1
007C 72E0             73     ORL C, ACC.0; C = X0 V ^X1
007E B3               74     CPL C; C = ^X0 & X1
007F 72E2             75     ORL C, ACC.2; C = X2 V (^X0 & X1)
0081 B3               76     CPL C; C = ^X2 & (X0 V ^X1)
0082 82E3             77     ANL C, ACC.3; C = X3 & ^X2 & (X0 V ^X1)
0084 7204             78     ORL C, 20h.4; C = ^x0 & x2 & x1 v ^x3 & ^x0 & x2 v ^x2 & ^x1 & x0 v x3 & ^x2 & (x0 v ^x1)
0086 92C0             79     MOV     P4.0,C  ;res:=F
                      80     ; LOADING IDEALS
0088 20E312           81     JB ACC.3, SECOND        ;IF CASE >7
008B 908000           82     MOV DPTR, #8000h
008E E0               83     MOVX A, @DPTR; A = RELATIVE ADDRESS
008F F582             84     MOV  DPL, A
0091 E0               85     MOVX A, @DPTR;A = BASE ADDRESS
0092 F582             86     MOV DPL, A
0094 E0               87     MOVX A, @DPTR; A = IDEALS
0095 8520F0           88     MOV B, 20h
0098 53F007           89     ANL B, #00000111b
                      90     ;--------
009B 01AF             91     AJMP NEXT;
009D                  92     SECOND:
009D 908000           93     MOV DPTR, #8000h
00A0 E0               94     MOVX A, @DPTR; A = RELATIVE ADDRESS
00A1 F582             95     MOV DPL, A
00A3 E0               96     MOVX A, @DPTR; A = BASE ADDRESS
00A4 2401             97     ADD A,#0001h
00A6 F582             98     MOV DPL, A
00A8 E0               99     MOVX A, @DPTR; A = IDEALS
00A9 8520F0          100     MOV B, 20h
00AC 53F00F          101     ANL B, #00001111b
00AF                 102     NEXT:
00AF C5F0            103     XCH A, B                ; A = counter
00B1 6006            104     JZ END_OF_CYCLE ; if count = 0
00B3 C5F0            105     XCH A, B                ; A = half of truth table, B = count
00B5                 106     cycle:
00B5 03              107     RR A;
00B6 D5F0FC          108     DJNZ B, cycle;
00B9                 109     END_OF_CYCLE:
00B9 F5F0            110     MOV B, A;
00BB A2F0            111     MOV C, B.0              ;bit from table
00BD B3              112     CPL C                   ; invert c
00BE 92C1            113     MOV P4.1, C             ; P4.1 = inverted bit from table
                     114     
                     115     ;timer - sleep
                     116     ; duration of 1 cycle ~ 0.071 sec
                     117     ; num of cycles which duration not lower than 1 sec is =>15
00C0 E520            118     MOV A, 20h              ; A = X3X2X1X0
00C2 540F            119     ANL A, #00001111b; clear high half
00C4 2440            120     ADD A, #40h             ;address of number
00C6 F9              121     MOV R1, A
00C7 E7              122     MOV A, @R1              ; seconds from address (40h + tuple_number)
00C8 758901          123     MOV TMOD,#00000001b     ; mode 1
                     124     
A51 MACRO ASSEMBLER  EVS2                                                                 09/26/2023 15:44:47 PAGE     3

00CB 75F001          125     MOV B, #001h;#0C8h ; 1 external circle
00CE ABF0            126     MOV R3, B
00D0 14              127     DEC A
00D1 6005            128     JZ SET_7
00D3                 129     SET_E:
00D3 75F00E          130     MOV B, #00Eh;#014h ;number of iterations = 15
00D6 8003            131     JMP MUL_MET
00D8                 132     SET_7:
00D8 75F007          133     MOV B, #007h
00DB                 134     MUL_MET:
00DB E7              135     MOV A, @R1
00DC A4              136     MUL AB                  ; inner circle seconds: 0.071 * B * A
00DD FA              137     MOV R2, A; inner circle seconds R2 = A * B * 0.071
                     138     
00DE C28C            139         START: CLR TR0              ;reset counter
00E0 758A00          140             MOV TL0, #000h;#01Ah    ;init value
00E3 D28C            141             SETB TR0                ;start count
00E5 108D02          142             CLOCK:JBC TF0, FINISH   
00E8 80FB            143                JMP CLOCK
00EA DAF2            144                FINISH: DJNZ R2, START
00EC FA              145                 MOV R2, A
00ED DBEF            146                 DJNZ R3, START
                     147     
                     148     ;next tuple
00EF 907FFA          149     MOV DPTR, #7FFAh
00F2 E0              150     MOVX A, @DPTR
00F3 2401            151     ADD A, #1
00F5 30E402          152     JNB ACC.4, WRITE
00F8                 153     SET_ZERO:
00F8 7400            154     MOV A, #0000h
00FA                 155     WRITE:
00FA F0              156     MOVX @DPTR, A
                     157     
                     158     ; set isReadyBit = 0
00FB 907FFB          159     MOV DPTR,#7FFBh
00FE 7400            160     MOV A, #00h
0100 F0              161     MOVX @DPTR, A
0101 014C            162     AJMP MET1;
                     163     END
A51 MACRO ASSEMBLER  EVS2                                                                 09/26/2023 15:44:47 PAGE     4

SYMBOL TABLE LISTING
------ ----- -------


N A M E             T Y P E  V A L U E   ATTRIBUTES

ACC. . . . . . . .  D ADDR   00E0H   A   
B. . . . . . . . .  D ADDR   00F0H   A   
BASEADDRESS. . . .  N NUMB   0011H   A   
CLOCK. . . . . . .  C ADDR   00E5H   A   
CYCLE. . . . . . .  C ADDR   00B5H   A   
DPL. . . . . . . .  D ADDR   0082H   A   
END_OF_CYCLE . . .  C ADDR   00B9H   A   
FINISH . . . . . .  C ADDR   00EAH   A   
ISREADY. . . . . .  C ADDR   004FH   A   
MET1 . . . . . . .  C ADDR   004CH   A   
MUL_MET. . . . . .  C ADDR   00DBH   A   
NEXT . . . . . . .  C ADDR   00AFH   A   
P4 . . . . . . . .  N NUMB   00C0H   A   
RELATIVEADDRESS. .  N NUMB   0004H   A   
SECOND . . . . . .  C ADDR   009DH   A   
SET_7. . . . . . .  C ADDR   00D8H   A   
SET_E. . . . . . .  C ADDR   00D3H   A   
SET_ZERO . . . . .  C ADDR   00F8H   A   
START. . . . . . .  C ADDR   00DEH   A   
TF0. . . . . . . .  B ADDR   0088H.5 A   
TL0. . . . . . . .  D ADDR   008AH   A   
TMOD . . . . . . .  D ADDR   0089H   A   
TR0. . . . . . . .  B ADDR   0088H.4 A   
WRITE. . . . . . .  C ADDR   00FAH   A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
