A51 MACRO ASSEMBLER  EVS2                                                                 09/25/2023 14:21:17 PAGE     1


MACRO ASSEMBLER A51 V8.02b
OBJECT MODULE PLACED IN Evs2.OBJ
ASSEMBLER INVOKED BY: C:\Keil_v5\C51\BIN\A51.EXE Evs2.a51 SET(SMALL) DEBUG EP

LOC  OBJ            LINE     SOURCE

                       1     ;F(X3,X2,X1,X0) == 1 <=> 1,4,6,8,9,11,14
0000                   2     ORG 0000h;
  0011                 3     BASEADDRESS EQU 0011h;11h
  0004                 4     RELATIVEADDRESS EQU 0004h;04h
0000 020003            5     LJMP MAIN
                       6     
0003                   7     MAIN:
                       8     ; init values for timer in every case: 1...5 sec wait
0003 754005            9     MOV 40H, #5 ;0; seach table for number of seconds for each set of x3,x2,x1,x0
0006 754102           10     MOV 41H, #2 ;1
0009 754201           11     MOV 42H, #1 ;2
000C 754301           12     MOV 43H, #1 ;3
000F 754401           13     MOV 44H, #1 ;4
0012 754503           14     MOV 45H, #3 ;5
0015 754603           15     MOV 46H, #3 ;6
0018 754701           16     MOV 47H, #1 ;7
001B 754805           17     MOV 48H, #5;8
001E 754904           18     MOV 49H, #4;9
0021 754A01           19     MOV 4AH, #1;10
0024 754B02           20     MOV 4BH, #2;11
0027 754C01           21     MOV 4CH, #1;12
002A 754D01           22     MOV 4DH, #1;13
002D 754E01           23     MOV 4EH, #1;14
0030 754F01           24     MOV 4FH, #1;15
  00C0                25     P4 EQU 0C0h
0033 908000           26     MOV DPTR, #8000h
0036 7404             27     MOV A,#04h ;0004h - relative address OFFSET
0038 F0               28     MOVX @DPTR, A 
0039 908004           29     MOV DPTR,#8004h
003C 7411             30     MOV A, #11h; 0011h - base address OFFSET
003E F0               31     MOVX @DPTR, A
003F 7452             32     MOV A,  #01010010b
0041 908011           33     MOV DPTR, #8011h
0044 F0               34     MOVX  @DPTR, A          ;0-7 truth table in ex memory
                      35     ;MOV DPTR, #8001h
0045 744B             36     MOV A,  #01001011b
0047 908012           37     MOV DPTR, #8012h
004A F0               38     MOVX @DPTR, A ;8-15 truth table in ex memory
004B C2C0             39     CLR P4.0;
004D D2C1             40     SETB P4.1;
004F                  41     MET1:
004F 907FFB           42     MOV DPTR,#7FFBh ;address isReady flag
0052                  43     isReady:                ;check flag isReady
0052 E0               44     MOVX A,@DPTR    ;read flag
0053 5401             45     ANL A,#01h              ;select 0 bit
0055 60FB             46     JZ isReady
0057 907FFA           47     MOV DPTR,#7FFAh ;addres of (x3,x2,x1,x0) tuple
005A E0               48     MOVX A,@DPTR    ;write tuple to A
005B F520             49     MOV 20h, A              ;write x3,x2,x1,x0 to 20h
                      50     ; F(x3,x2,x1,x0) = ^x0 & x2 & x1 v ^x3 & ^x0 & x2 v ^x2 & ^x1 & x0 v x3 & ^x2 & (x0 v ^x1)
                      51     ;X3 - 3, X2 - 2, X1 - 1, X0 - 0
                      52     
005D A2E0             53     MOV C, ACC.0 ;C = X0
005F B3               54     CPL C;C = ^X0
0060 82E2             55     ANL C, ACC.2; C = ^X0 & X2
0062 82E1             56     ANL C, ACC.1; C = ^X0 & X2 & X1
0064 9204             57     MOV 20h.4, C; 03 = ^X0 & X2 & X1 -- 1
                      58     
A51 MACRO ASSEMBLER  EVS2                                                                 09/25/2023 14:21:17 PAGE     2

0066 A2E3             59     MOV C, ACC.3;C = X3
0068 72E0             60     ORL C, ACC.0; C = X3 V X0
006A B3               61     CPL C; C = ^X3 & ^X0
006B 82E2             62     ANL C, ACC.2; C = ^X3 & ^X0 & X2
006D 7204             63     ORL C, 20h.4; C = ^x0 & x2 & x1 v ^x3 & ^x0 & x2
006F 9204             64     MOV 20h.4, C; 03 = ^x0 & x2 & x1 v ^x3 & ^x0 & x2 -- 2
                      65     
0071 A2E2             66     MOV C, ACC.2;C = X2
0073 72E1             67     ORL C, ACC.1; C = X2 V X1
0075 B3               68     CPL C; C = ^X2 & ^X1
0076 82E0             69     ANL C, ACC.0; C = ^X2 & ^X1 & X0
0078 7204             70     ORL C, 20h.4; C = ^x0 & x2 & x1 v ^x3 & ^x0 & x2 v ^x2 & ^x1 & x0
007A 9204             71     MOV 20h.4, C; 03 = ^x0 & x2 & x1 v ^x3 & ^x0 & x2 v ^x2 & ^x1 & x0 -- 4
                      72     
007C A2E1             73     MOV C, ACC.1; C = X1
007E B3               74     CPL C; C = ^X1
007F 72E0             75     ORL C, ACC.0; C = X0 V ^X1
0081 B3               76     CPL C; C = ^X0 & X1
0082 72E2             77     ORL C, ACC.2; C = X2 V (^X0 & X1)
0084 B3               78     CPL C; C = ^X2 & (X0 V ^X1)
0085 82E3             79     ANL C, ACC.3; C = X3 & ^X2 & (X0 V ^X1)
0087 7204             80     ORL C, 20h.4; C = ^x0 & x2 & x1 v ^x3 & ^x0 & x2 v ^x2 & ^x1 & x0 v x3 & ^x2 & (x0 v ^x1)
0089 92C0             81     MOV     P4.0,C  ;res:=F
                      82     ; LOADING IDEALS
008B 20E312           83     JB ACC.3, SECOND        ;IF CASE >7
008E 908000           84     MOV DPTR, #8000h
0091 E0               85     MOVX A, @DPTR; A = RELATIVE ADDRESS
0092 F582             86     MOV  DPL, A
0094 E0               87     MOVX A, @DPTR;A = BASE ADDRESS
0095 F582             88     MOV DPL, A
0097 E0               89     MOVX A, @DPTR; A = IDEALS
0098 8520F0           90     MOV B, 20h
009B 53F007           91     ANL B, #00000111b
                      92     ;--------
009E 01B2             93     AJMP NEXT;
00A0                  94     SECOND:
00A0 908000           95     MOV DPTR, #8000h
00A3 E0               96     MOVX A, @DPTR; A = RELATIVE ADDRESS
00A4 F582             97     MOV DPL, A
00A6 E0               98     MOVX A, @DPTR; A = BASE ADDRESS
00A7 2401             99     ADD A,#0001h
00A9 F582            100     MOV DPL, A
00AB E0              101     MOVX A, @DPTR; A = IDEALS
                     102     ;MOV DPTR, #8001h;
                     103     ;-- MY ADDITION
00AC 8520F0          104     MOV B, 20h
00AF 53F00F          105     ANL B, #00001111b
                     106     ; -------------
00B2                 107     NEXT:
00B2 C5F0            108     XCH A, B                ; A = counter
00B4 6006            109     JZ END_OF_CYCLE ; if count = 0
00B6 C5F0            110     XCH A, B                ; A = half of truth table, B = count
00B8                 111     cycle:
00B8 03              112     RR A;
00B9 D5F0FC          113     DJNZ B, cycle;
00BC                 114     END_OF_CYCLE:
00BC F5F0            115     MOV B, A;
00BE A2F0            116     MOV C, B.0              ;bit from table
00C0 B3              117     CPL C                   ; invert c
00C1 92C1            118     MOV P4.1, C             ; P4.1 = inverted bit from table
                     119     
                     120     ;next tuple
00C3 907FFA          121     MOV DPTR, #7FFAh
00C6 E0              122     MOVX A, @DPTR
00C7 2401            123     ADD A, #1
00C9 30E402          124     JNB ACC.4, WRITE
A51 MACRO ASSEMBLER  EVS2                                                                 09/25/2023 14:21:17 PAGE     3

00CC                 125     SET_ZERO:
00CC 7400            126     MOV A, #0000h
00CE                 127     WRITE:
00CE F0              128     MOVX @DPTR, A
                     129     
                     130     ;timer - sleep
00CF E520            131     MOV A, 20h              ; A = Q3Q2Q1Q0
00D1 540F            132     ANL A, #00001111b; clear high half
00D3 2440            133     ADD A, #40h             ;address of number
00D5 F9              134     MOV R1, A
00D6 E7              135     MOV A, @R1              ; seconds
00D7 758901          136     MOV TMOD,#00000001b     ; mode 1
00DA 75F001          137     MOV B, #001h;#0C8h
00DD ABF0            138     MOV R3, B               ; out circle 200
00DF 75F00E          139     MOV B, #00Eh;#014h ;number of iterations
00E2 A4              140     MUL AB                  ; 20seconds A = inner circle
00E3 FA              141     MOV R2, A; inner circle 250*20seconds R2=A
                     142     
00E4 C28C            143         START: CLR TR0              ;reset counter
00E6 758A1A          144             MOV TL0, #01Ah  ;init value
00E9 D28C            145             SETB TR0                ;start count
00EB 108D02          146             CLOCK:JBC TF0, FINISH   ;250ms
00EE 80FB            147                JMP CLOCK
00F0 DAF2            148                FINISH: DJNZ R2, START       ;inner circle end 20*seconds = A
00F2 FA              149                 MOV R2, A; inner circle 25020*seconds
00F3 DBEF            150                 DJNZ R3, START
                     151     
00F5 907FFB          152     MOV DPTR,#7FFBh
00F8 7400            153     MOV A, #00h
00FA F0              154     MOVX @DPTR, A
00FB 014F            155     AJMP MET1;
                     156     END
A51 MACRO ASSEMBLER  EVS2                                                                 09/25/2023 14:21:17 PAGE     4

SYMBOL TABLE LISTING
------ ----- -------


N A M E             T Y P E  V A L U E   ATTRIBUTES

ACC. . . . . . . .  D ADDR   00E0H   A   
B. . . . . . . . .  D ADDR   00F0H   A   
BASEADDRESS. . . .  N NUMB   0011H   A   
CLOCK. . . . . . .  C ADDR   00EBH   A   
CYCLE. . . . . . .  C ADDR   00B8H   A   
DPL. . . . . . . .  D ADDR   0082H   A   
END_OF_CYCLE . . .  C ADDR   00BCH   A   
FINISH . . . . . .  C ADDR   00F0H   A   
ISREADY. . . . . .  C ADDR   0052H   A   
MAIN . . . . . . .  C ADDR   0003H   A   
MET1 . . . . . . .  C ADDR   004FH   A   
NEXT . . . . . . .  C ADDR   00B2H   A   
P4 . . . . . . . .  N NUMB   00C0H   A   
RELATIVEADDRESS. .  N NUMB   0004H   A   
SECOND . . . . . .  C ADDR   00A0H   A   
SET_ZERO . . . . .  C ADDR   00CCH   A   
START. . . . . . .  C ADDR   00E4H   A   
TF0. . . . . . . .  B ADDR   0088H.5 A   
TL0. . . . . . . .  D ADDR   008AH   A   
TMOD . . . . . . .  D ADDR   0089H   A   
TR0. . . . . . . .  B ADDR   0088H.4 A   
WRITE. . . . . . .  C ADDR   00CEH   A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
