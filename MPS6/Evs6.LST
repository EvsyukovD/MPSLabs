A51 MACRO ASSEMBLER  EVS6                                                                 10/30/2023 10:15:49 PAGE     1


MACRO ASSEMBLER A51 V8.02b
OBJECT MODULE PLACED IN Evs6.OBJ
ASSEMBLER INVOKED BY: C:\Keil_v5\C51\BIN\A51.EXE Evs6.a51 SET(SMALL) DEBUG EP

LOC  OBJ            LINE     SOURCE

0000                   1     ORG 0000H
  00C0                 2     P4 EQU 0C0H
  00C5                 3     ADCON EQU 0C5H
  00C6                 4     ADCH EQU 0C6H
  00FC                 5     PWM0 EQU  0FCH
  00FD                 6     PWM1 EQU 0FDH
  00FE                 7     PWMP EQU 0FEH
  0001                 8     DELAY EQU 01h
  0008                 9     CHANNELS_COUNT EQU 8
  0020                10     INDEX_ADDR EQU 20h
  0009                11     PWMP_VAL EQU 9
  000A                12     BASE EQU 0Ah; base=10
  0021                13     PWMX_VALS_BASE_ADDR EQU 21h
                      14     ;calculate PWMx value for any S = T/t1, T = t0 + t1, t0/t1 = PWMx / (255 - PWMx)
  00FF                15     PWMX_VAL_FOR_S_0 EQU 0FFh
  0000                16     PWMX_VAL_FOR_S_1 EQU 00h
  0080                17     PWMX_VAL_FOR_S_2 EQU 080h
  00AA                18     PWMX_VAL_FOR_S_3 EQU 0AAh
  00BF                19     PWMX_VAL_FOR_S_4 EQU 0BFh
  00CC                20     PWMX_VAL_FOR_S_5 EQU 0CCh
  00D5                21     PWMX_VAL_FOR_S_6 EQU 0D5h
  00DB                22     PWMX_VAL_FOR_S_7 EQU 0DBh
  00DF                23     PWMX_VAL_FOR_S_8 EQU 0DFh
  00E3                24     PWMX_VAL_FOR_S_9 EQU 0E3h
                      25     
                      26     ;--write PWMx values as array in internal memory
0000 7821             27     MOV R0, #PWMX_VALS_BASE_ADDR
0002 76FF             28     MOV @R0, #PWMX_VAL_FOR_S_0
0004 E8               29     MOV A, R0
0005 04               30     INC A
0006 F8               31     MOV R0, A
0007 7600             32     MOV @R0, #PWMX_VAL_FOR_S_1
0009 E8               33     MOV A, R0
000A 04               34     INC A
000B F8               35     MOV R0, A
000C 7680             36     MOV @R0, #PWMX_VAL_FOR_S_2
000E E8               37     MOV A, R0
000F 04               38     INC A
0010 F8               39     MOV R0, A
0011 76AA             40     MOV @R0, #PWMX_VAL_FOR_S_3
0013 E8               41     MOV A, R0
0014 04               42     INC A
0015 F8               43     MOV R0, A
0016 76BF             44     MOV @R0, #PWMX_VAL_FOR_S_4
0018 E8               45     MOV A, R0
0019 04               46     INC A
001A F8               47     MOV R0, A
001B 76CC             48     MOV @R0, #PWMX_VAL_FOR_S_5
001D E8               49     MOV A, R0
001E 04               50     INC A
001F F8               51     MOV R0, A
0020 76D5             52     MOV @R0, #PWMX_VAL_FOR_S_6
0022 E8               53     MOV A, R0
0023 04               54     INC A
0024 F8               55     MOV R0, A
0025 76DB             56     MOV @R0, #PWMX_VAL_FOR_S_7
0027 E8               57     MOV A, R0
0028 04               58     INC A
A51 MACRO ASSEMBLER  EVS6                                                                 10/30/2023 10:15:49 PAGE     2

0029 F8               59     MOV R0, A
002A 76DF             60     MOV @R0, #PWMX_VAL_FOR_S_8
002C E8               61     MOV A, R0
002D 04               62     INC A
002E F8               63     MOV R0, A
002F 76E3             64     MOV @R0, #PWMX_VAL_FOR_S_9
0031                  65     IS_READY:
0031 907FFB           66     MOV DPTR, #7ffbh ; address with ready flag
0034 E0               67     MOVX A, @DPTR
0035 5401             68     ANL A, #01
0037 60F8             69     JZ IS_READY; wait for ready flag
                      70     
0039 7400             71     MOV A, #00h
003B F0               72     MOVX @DPTR, A; reset flag
003C 758901           73     MOV TMOD, #00000001b; mode 1
003F 752000           74     MOV INDEX_ADDR, #0; init index, i
0042                  75     MAIN_ADC_PWM_CYCLE:
0042 7408             76     MOV A, #CHANNELS_COUNT
0044 9520             77     SUBB A, INDEX_ADDR
0046 60E9             78     JZ IS_READY
0048 75C500           79     MOV ADCON, #00000000b; reset ADCON
                      80     ; read value from channel with index i
004B E520             81     MOV A, INDEX_ADDR; A = i
004D D2E3             82     SETB ACC.3
004F F5C5             83     MOV ADCON, A; now ADCON contains index of channel
0051 E5C5             84     WAIT_ADC: MOV A,ADCON
0053 5410             85     ANL A, #10H
0055 60FA             86     JZ WAIT_ADC ;wait for ADC read value from channel
0057 E5C6             87     MOV A, ADCH ;read result of ADC work
                      88     ;-- lets extract digits from ADCH value
0059                  89     DIGITS_EXTRACTING_CYCLE:
0059 FC               90     MOV R4, A
005A 75F00A           91     MOV B, #BASE
005D 84               92     DIV AB; divide A on BASE and receive A = BASE * z + r, where A = z and B = r (r from {0,..,
                             BASE - 1})
                      93     ;---work with pwm---
005E F8               94     MOV R0, A; save A value
005F 7421             95     MOV A, #PWMX_VALS_BASE_ADDR
0061 25F0             96     ADD A, B; calc addres of PWMx value
0063 F9               97     MOV R1, A
0064 87FC             98     MOV PWM0, @R1
0066 E8               99     MOV A, R0
0067 7B01            100     MOV R3, #01h; sleep for 1 second
0069 117E            101     ACALL SLEEP
006B EC              102     MOV A, R4
006C 95F0            103     SUBB A, B
006E 75F00A          104     MOV B, #BASE
0071 84              105     DIV AB
0072 70E5            106     JNZ DIGITS_EXTRACTING_CYCLE
0074 75FCFF          107     MOV PWM0, #PWMX_VAL_FOR_S_0
0077 7B01            108     MOV R3, #DELAY
0079 117E            109     ACALL SLEEP
007B 020096          110     LJMP NEXT_INDEX
                     111     ;delay function:
007E                 112     SLEEP:
                     113     ; R3 (as param) contains delay          
007E 7A64            114     MOV R2, #064h
0080 C28C            115         START: CLR TR0              ;reset counter
0082 758CD8          116             MOV TH0, #HIGH(-10000);init value 
0085 758AF0          117                     MOV TL0, #LOW(-10000); load to T0 value 10000 (it means that processor will
                              work for 10 ms = 0.01 sec if freq is 12 MHz)
0088 C28D            118                     CLR TF0
008A D28C            119             SETB TR0                ;start count
008C                 120             CLOCK:
008C 308DFD          121                        JNB TF0, CLOCK
008F DAEF            122                FINISH: DJNZ R2, START
A51 MACRO ASSEMBLER  EVS6                                                                 10/30/2023 10:15:49 PAGE     3

0091 7A64            123                 MOV R2, #064h
0093 DBEB            124                 DJNZ R3, START
0095 22              125     RET
0096                 126     NEXT_INDEX:
0096 E520            127     MOV A, INDEX_ADDR
0098 04              128     INC A
0099 F520            129     MOV INDEX_ADDR, A
009B 020042          130     LJMP MAIN_ADC_PWM_CYCLE
                     131     
009E                 132     END_MAIN_CYCLE:
                     133     END
A51 MACRO ASSEMBLER  EVS6                                                                 10/30/2023 10:15:49 PAGE     4

SYMBOL TABLE LISTING
------ ----- -------


N A M E                  T Y P E  V A L U E   ATTRIBUTES

ACC . . . . . . . . . .  D ADDR   00E0H   A   
ADCH. . . . . . . . . .  N NUMB   00C6H   A   
ADCON . . . . . . . . .  N NUMB   00C5H   A   
B . . . . . . . . . . .  D ADDR   00F0H   A   
BASE. . . . . . . . . .  N NUMB   000AH   A   
CHANNELS_COUNT. . . . .  N NUMB   0008H   A   
CLOCK . . . . . . . . .  C ADDR   008CH   A   
DELAY . . . . . . . . .  N NUMB   0001H   A   
DIGITS_EXTRACTING_CYCLE  C ADDR   0059H   A   
END_MAIN_CYCLE. . . . .  C ADDR   009EH   A   
FINISH. . . . . . . . .  C ADDR   008FH   A   
INDEX_ADDR. . . . . . .  N NUMB   0020H   A   
IS_READY. . . . . . . .  C ADDR   0031H   A   
MAIN_ADC_PWM_CYCLE. . .  C ADDR   0042H   A   
NEXT_INDEX. . . . . . .  C ADDR   0096H   A   
P4. . . . . . . . . . .  N NUMB   00C0H   A   
PWM0. . . . . . . . . .  N NUMB   00FCH   A   
PWM1. . . . . . . . . .  N NUMB   00FDH   A   
PWMP. . . . . . . . . .  N NUMB   00FEH   A   
PWMP_VAL. . . . . . . .  N NUMB   0009H   A   
PWMX_VALS_BASE_ADDR . .  N NUMB   0021H   A   
PWMX_VAL_FOR_S_0. . . .  N NUMB   00FFH   A   
PWMX_VAL_FOR_S_1. . . .  N NUMB   0000H   A   
PWMX_VAL_FOR_S_2. . . .  N NUMB   0080H   A   
PWMX_VAL_FOR_S_3. . . .  N NUMB   00AAH   A   
PWMX_VAL_FOR_S_4. . . .  N NUMB   00BFH   A   
PWMX_VAL_FOR_S_5. . . .  N NUMB   00CCH   A   
PWMX_VAL_FOR_S_6. . . .  N NUMB   00D5H   A   
PWMX_VAL_FOR_S_7. . . .  N NUMB   00DBH   A   
PWMX_VAL_FOR_S_8. . . .  N NUMB   00DFH   A   
PWMX_VAL_FOR_S_9. . . .  N NUMB   00E3H   A   
SLEEP . . . . . . . . .  C ADDR   007EH   A   
START . . . . . . . . .  C ADDR   0080H   A   
TF0 . . . . . . . . . .  B ADDR   0088H.5 A   
TH0 . . . . . . . . . .  D ADDR   008CH   A   
TL0 . . . . . . . . . .  D ADDR   008AH   A   
TMOD. . . . . . . . . .  D ADDR   0089H   A   
TR0 . . . . . . . . . .  B ADDR   0088H.4 A   
WAIT_ADC. . . . . . . .  C ADDR   0051H   A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
